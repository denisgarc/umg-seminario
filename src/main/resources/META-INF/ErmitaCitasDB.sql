CREATE DATABASE ErmitaCitasDB;
CREATE USER usr_aplicacion@localhost IDENTIFIED BY 'erm!t@2023';
GRANT SELECT, INSERT, UPDATE, DELETE ON ErmitaCitasDB.* TO usr_aplicacion@localhost;
GRANT ALL PRIVILEGES ON ErmitaCitasDB.* to usr_aplicacion@localhost;

-- drop table ErmitaCitasDB.PAIS
CREATE TABLE ErmitaCitasDB.PAIS
(
  ID_PAIS      INT               NOT NULL AUTO_INCREMENT,
  NOMBRE       VARCHAR(100)         NOT NULL,
  DESCRIPCION  VARCHAR(250),
  PRIMARY KEY (ID_PAIS)
);

CREATE TABLE ErmitaCitasDB.PUESTO
(
  ID_PUESTO    INT              NOT NULL AUTO_INCREMENT,
  DESCRIPCION  VARCHAR(50)         NOT NULL,
  ACTIVO       CHAR(1)             DEFAULT 'S' NOT NULL,
  PRIMARY KEY (ID_PUESTO)
);


CREATE TABLE ErmitaCitasDB.UNIDAD
(
  ID_UNIDAD    INT              NOT NULL AUTO_INCREMENT,
  DESCRIPCION  VARCHAR(50)         NOT NULL,
  ABREVIATURA  VARCHAR(10),
  ACTIVO       CHAR(1)             DEFAULT 'S' NOT NULL,
  PRIMARY KEY (ID_UNIDAD)
);

CREATE TABLE ErmitaCitasDB.ROL
(
  ID_ROL       INT              NOT NULL AUTO_INCREMENT,
  DESCRIPCION  VARCHAR(50)         NOT NULL,
  ACTIVO       CHAR(1)             DEFAULT 'S' NOT NULL,
  PRIMARY KEY (ID_ROL)
);

CREATE TABLE ErmitaCitasDB.TIPO_CONSULTA
(
  ID_TIPO_CONSULTA  INT         NOT NULL AUTO_INCREMENT,
  DESCRIPCION       VARCHAR(50)    NOT NULL,
  ACTIVO            CHAR(1)        DEFAULT 'S' NOT NULL,
  PRIMARY KEY (ID_TIPO_CONSULTA)
);


CREATE TABLE ErmitaCitasDB.TIPO_DIAGNOSTICO
(
  ID_TIPO_DIAGNOSTICO  INT     NOT NULL AUTO_INCREMENT,
  DESCRIPCION          VARCHAR(50) NOT NULL,
  ACTIVO               CHAR(1)     DEFAULT 'S' NOT NULL,
  PRIMARY KEY (ID_TIPO_DIAGNOSTICO)
);

CREATE TABLE ErmitaCitasDB.TIPO_DOCUMENTO
(
  ID_TIPO_DOCUMENTO  INT       NOT NULL AUTO_INCREMENT,
  DESCRIPCION        VARCHAR(50)  NOT NULL,
  ACTIVO             CHAR(1)      DEFAULT 'S' NOT NULL,
  ABREVIATURA        VARCHAR(10),
  PRIMARY KEY (ID_TIPO_DOCUMENTO)
);

CREATE TABLE ErmitaCitasDB.TIPO_TRATAMIENTO
(
  ID_TIPO_TRATAMIENTO  INT       NOT NULL AUTO_INCREMENT,
  DESCRIPCION          VARCHAR(50)  NOT NULL,
  ACTIVO               CHAR(1)      DEFAULT 'S' NOT NULL,
  PRIMARY KEY (ID_TIPO_TRATAMIENTO)
);

CREATE TABLE ErmitaCitasDB.PERSONA
(
  ID_PERSONA         INT              NOT NULL AUTO_INCREMENT,
  NOMBRES            VARCHAR(100)         NOT NULL,
  APELLIDOS          VARCHAR(100),
  FEC_NACIMIENTO     DATE                 NOT NULL,
  DOCUMENTO_ID       VARCHAR(30),
  ID_TIPO_DOCUMENTO  INT,
  SEXO               CHAR(1)              NOT NULL,
  DIRECCION          VARCHAR(200),
  TELEFONOS          VARCHAR(100),
  ACTIVO             CHAR(1)              DEFAULT 'S' NOT NULL,
  PRIMARY KEY (ID_PERSONA),
  CONSTRAINT CK_PERSONA_ACTIVO
    CHECK (ACTIVO IN ('S', 'N')),
  CONSTRAINT CK_PERSONA_SEXO
    CHECK (SEXO IN ('F', 'M')),
  CONSTRAINT FK_PERSONA_TIPO_DOC 
    FOREIGN KEY (ID_TIPO_DOCUMENTO) 
    REFERENCES ErmitaCitasDB.TIPO_DOCUMENTO (ID_TIPO_DOCUMENTO)
);

CREATE TABLE ErmitaCitasDB.USUARIO
(
  ID_USUARIO          INT      NOT NULL AUTO_INCREMENT,
  ID_PERSONA          INT      NOT NULL,
  USUARIO             VARCHAR(25)  NOT NULL,
  CONTRASENA          VARCHAR(25)  NOT NULL,
  FEC_VTO_CONTRASENA  DATE,
  ACTIVO              CHAR(1)     DEFAULT 'S' NOT NULL,
  PRIMARY KEY (ID_USUARIO),
  CONSTRAINT FK_USUARIO_PERSONA 
    FOREIGN KEY (ID_PERSONA) 
    REFERENCES ErmitaCitasDB.PERSONA (ID_PERSONA)
);


CREATE TABLE ErmitaCitasDB.USUARIO_ROL
(
  ID_USUARIO  INT   NOT NULL,
  ID_ROL      INT    NOT NULL,
  PRIMARY KEY (ID_USUARIO, ID_ROL),
  CONSTRAINT FK_USUARIO_R_ROL 
    FOREIGN KEY (ID_ROL) 
    REFERENCES ErmitaCitasDB.ROL (ID_ROL),
  CONSTRAINT FK_USUARIO_R_USUARIO 
    FOREIGN KEY (ID_USUARIO) 
    REFERENCES ErmitaCitasDB.USUARIO (ID_USUARIO)
);


CREATE TABLE ErmitaCitasDB.DEPARTAMENTO
(
  ID_DEPARTAMENTO  INT                  NOT NULL AUTO_INCREMENT,
  ID_PAIS          INT                  NOT NULL,
  NOMBRE           VARCHAR(100)             NOT NULL,
  DESCRIPCION      VARCHAR(50)              NOT NULL,
  PRIMARY KEY (ID_DEPARTAMENTO),
  CONSTRAINT FK_DEPARTAMENTO_PAIS 
    FOREIGN KEY (ID_PAIS) 
    REFERENCES ErmitaCitasDB.PAIS (ID_PAIS)
);


CREATE TABLE ErmitaCitasDB.ESTADO
(
  ID_ESTADO    INT               NOT NULL AUTO_INCREMENT,
  DESCRIPCION  VARCHAR(50)           NOT NULL,
  ACTIVO       CHAR(1)               DEFAULT 'S' NOT NULL,
  PRIMARY KEY (ID_ESTADO),
  CONSTRAINT CK_ESTADO_ACTIVO
    CHECK (ACTIVO IN ('S', 'N'))
);


CREATE TABLE ErmitaCitasDB.ESPECIALIZACION
(
  ID_ESPECIALIZACION  INT                  NOT NULL AUTO_INCREMENT,
  DESCRIPCION         VARCHAR(50)              NOT NULL,
  ACTIVO              CHAR(1)                   DEFAULT 'S'                   NOT NULL,
  PRIMARY KEY (ID_ESPECIALIZACION),
  CONSTRAINT CK_ESPECIALIZA_ACTIVO
    CHECK (ACTIVO IN ('S', 'N'))
);


CREATE TABLE ErmitaCitasDB.MEDICAMENTO
(
  ID_MEDICAMENTO    INT               NOT NULL AUTO_INCREMENT,
  NOMBRE            VARCHAR(50)          NOT NULL,
  NOMBRE_COMERCIAL  VARCHAR(100)         NOT NULL,
  PRECIO            DECIMAL(10,2)        NOT NULL,
  ACTIVO            CHAR(1)              DEFAULT 'S' NOT NULL,
  PRIMARY KEY (ID_MEDICAMENTO),
  CONSTRAINT CK_MEDICAMENTO_ACTIVO
    CHECK (ACTIVO IN ('S', 'N'))
);

CREATE TABLE ErmitaCitasDB.HOSPITAL
(
  ID_HOSPITAL  INT                NOT NULL AUTO_INCREMENT,
  NOMBRE       VARCHAR(50)           NOT NULL,
  DIRECCION    VARCHAR(100)          NOT NULL,
  TELEFONOS    VARCHAR(100),
  ACTIVO       CHAR(1)               DEFAULT 'S' NOT NULL,
  PRIMARY KEY (ID_HOSPITAL),
  CONSTRAINT CK_HOSPITAL_ACTIVO
    CHECK (ACTIVO IN ('S', 'N'))
);

CREATE TABLE ErmitaCitasDB.PACIENTE
(
  ID_PACIENTE          INT                NOT NULL AUTO_INCREMENT,
  ID_PERSONA           INT                NOT NULL,
  FEC_ALTA             DATE,
  NUMERO_SEGURO        VARCHAR(25),
  TIPO_SANGRE          VARCHAR(25),
  FUMA                 CHAR(1)                DEFAULT 'N' NOT NULL,
  ID_PERSONA_CONTACTO  INT,
  ACTIVO               VARCHAR(30)        NOT NULL,
  FEC_DECESO		   DATE,
  PRIMARY KEY (ID_PACIENTE),
  CONSTRAINT CK_PACIENTE_FUMA
    CHECK (FUMA IN ('S', 'N')),
  CONSTRAINT FK_PACIENTE_PERSONA 
    FOREIGN KEY (ID_PERSONA) 
    REFERENCES ErmitaCitasDB.PERSONA (ID_PERSONA),
  CONSTRAINT FK_PACIENTE_PERSONA_CON 
    FOREIGN KEY (ID_PERSONA_CONTACTO) 
    REFERENCES ErmitaCitasDB.PERSONA (ID_PERSONA)
);


CREATE TABLE ErmitaCitasDB.HOSPITAL_CLINICA
(
  ID_CLINICA   INT NOT NULL AUTO_INCREMENT,
  ID_HOSPITAL  INT NOT NULL,
  DESCRIPCION  VARCHAR(50) NOT NULL,
  ACTIVO       CHAR(1) DEFAULT 'S' NOT NULL,
  PRIMARY KEY (ID_CLINICA, ID_HOSPITAL),
  CONSTRAINT CK_H_CLINICA_ACTIVO
    CHECK (ACTIVO IN ('S', 'N')),
  CONSTRAINT FK_H_CLINICA_HOSPITAL 
    FOREIGN KEY (ID_HOSPITAL) 
    REFERENCES ErmitaCitasDB.HOSPITAL (ID_HOSPITAL)
);



CREATE TABLE ErmitaCitasDB.HOSPITAL_HORARIO
(
  ID_HORARIO   INT                   NOT NULL AUTO_INCREMENT,
  ID_HOSPITAL  INT                   NOT NULL,
  DESCRIPCION  VARCHAR(50)           NOT NULL,
  HORA_INICIO  DATETIME              NOT NULL,
  HORA_FIN     DATETIME              NOT NULL,
  ACTIVO       CHAR(1)               DEFAULT 'S' NOT NULL,
  PRIMARY KEY (ID_HORARIO,ID_HOSPITAL),
  CONSTRAINT CK_H_HORARIO_ACTIVO
    CHECK (ACTIVO IN ('S', 'N')),
  CONSTRAINT FK_H_HORARIO_HOSPITAL 
    FOREIGN KEY (ID_HOSPITAL) 
    REFERENCES ErmitaCitasDB.HOSPITAL (ID_HOSPITAL)
);


CREATE TABLE ErmitaCitasDB.HOSPITAL_SALA
(
  ID_SALA      INT                  NOT NULL AUTO_INCREMENT,
  ID_HOSPITAL  INT                  NOT NULL,
  DESCRIPCION  VARCHAR(50)          NOT NULL,
  ACTIVO       CHAR(1)              DEFAULT 'S' NOT NULL,
  PRIMARY KEY (ID_SALA,ID_HOSPITAL),
  CONSTRAINT CK_H_SALA_ACTIVO
    CHECK (ACTIVO IN ('S', 'N')),
  CONSTRAINT FK_H_SALA_HOSPITAL 
    FOREIGN KEY (ID_HOSPITAL) 
    REFERENCES ErmitaCitasDB.HOSPITAL (ID_HOSPITAL)
);

/* 
DROP TABLE ErmitaCitasDB.CITA 
*/

CREATE TABLE ErmitaCitasDB.CITA
(
  ID_CITA       INT                           NOT NULL AUTO_INCREMENT,
  FECHA_CITA    DATE                          NOT NULL,
  HORA_CITA     DATETIME                      NOT NULL,
  ID_PACIENTE   INT                           NOT NULL,
  ID_HOSPITAL   INT                           NOT NULL,
  ID_CLINICA    INT                           NOT NULL,
  ID_SALA       INT                           NOT NULL,
  ID_ESTADO     INT                           NOT NULL,
  OBSERVACIONES TEXT 			      NULL,
  PRIMARY KEY (ID_CITA),
  CONSTRAINT FK_CITA_ESTADO 
    FOREIGN KEY (ID_ESTADO) 
    REFERENCES ErmitaCitasDB.ESTADO (ID_ESTADO),
  CONSTRAINT FK_CITA_HOSPITAL 
    FOREIGN KEY (ID_HOSPITAL) 
    REFERENCES ErmitaCitasDB.HOSPITAL (ID_HOSPITAL),
  CONSTRAINT FK_CITA_PACIENTE 
    FOREIGN KEY (ID_PACIENTE) 
    REFERENCES ErmitaCitasDB.PACIENTE (ID_PACIENTE)
);

CREATE TABLE ErmitaCitasDB.EMPLEADO
(
  ID_EMPLEADO         INT                   NOT NULL AUTO_INCREMENT,
  ID_PERSONA          INT                   NOT NULL,
  ID_PUESTO           INT                   NOT NULL,
  ID_ESPECIALIZACION  INT                   NOT NULL,
  FEC_INGRESO         DATE,
  FEC_BAJA            DATE,
  ACTIVO              CHAR(1)               DEFAULT 'S' NOT NULL,
  PRIMARY KEY (ID_EMPLEADO),
  CONSTRAINT CK_EMPLEADO_ACTIVO
    CHECK (ACTIVO IN ('S', 'N')),
  CONSTRAINT FK_EMPLEADO_PERSONA 
    FOREIGN KEY (ID_PERSONA) 
    REFERENCES ErmitaCitasDB.PERSONA (ID_PERSONA),
  CONSTRAINT FK_EMPLEADO_PUESTO 
    FOREIGN KEY (ID_PUESTO) 
    REFERENCES ErmitaCitasDB.PUESTO (ID_PUESTO),
  CONSTRAINT FK_EMPLEADO_ESPECIA 
    FOREIGN KEY (ID_ESPECIALIZACION) 
    REFERENCES ErmitaCitasDB.ESPECIALIZACION (ID_ESPECIALIZACION)
);

/*
DROP TABLE ErmitaCitasDB.CONSULTA
 */
CREATE TABLE ErmitaCitasDB.CONSULTA
(
  ID_CONSULTA       		INT                     NOT NULL AUTO_INCREMENT,
  FECHA_CONSULTA    		DATE                    NOT NULL,
  ID_TIPO_CONSULTA  		INT                     NOT NULL,
  ID_EMPLEADO       		INT                     NOT NULL,
  DESCRIPCION       		TEXT,
  OBSERVACIONES     		TEXT,
  ANTECEDENTES      		TEXT,
  ANAMNESIS					TEXT,
  EXAMENES_COMPLEMENTARIOS 	TEXT,
  EVALUACION_CLINICA 		TEXT,
  ORDENES_MEDICAS   		TEXT,
  ID_CITA           		INT                     NULL,
  ACTIVO            		CHAR(1)                 DEFAULT 'S' NOT NULL,
  PRIMARY KEY (ID_CONSULTA),
  CONSTRAINT CK_CONSULTA_ACTIVO
    CHECK (ACTIVO IN ('S', 'N')),
  CONSTRAINT FK_CONSULTA_CITA
    FOREIGN KEY (ID_CITA)
    REFERENCES ErmitaCitasDB.CITA (ID_CITA),
  CONSTRAINT FK_CONSULTA_EMPLEADO
    FOREIGN KEY (ID_EMPLEADO)
    REFERENCES ErmitaCitasDB.EMPLEADO (ID_EMPLEADO),
  CONSTRAINT FK_CONSULTA_T_CONSUL
    FOREIGN KEY (ID_TIPO_CONSULTA)
    REFERENCES ErmitaCitasDB.TIPO_CONSULTA (ID_TIPO_CONSULTA)
);

/*
ALTER TABLE ErmitaCitasDB.CONSULTA DROP CONSTRAINT FK_CONSULTA_CITA
ALTER TABLE ErmitaCitasDB.CONSULTA ADD CONSTRAINT FK_CONSULTA_CITA FOREIGN KEY (ID_CITA) REFERENCES ErmitaCitasDB.CITA (ID_CITA);
*/
/*
DROP TABLE ErmitaCitasDB.RECETA
 */
CREATE TABLE ErmitaCitasDB.RECETA
(
  ID_RECETA          INT        NOT NULL AUTO_INCREMENT,
  ID_CONSULTA        INT        NOT NULL,
  FECHA_VENCIMIENTO  DATE           NOT NULL,
  PRIMARY KEY (ID_RECETA),
  CONSTRAINT FK_RECETA_CONSULTA 
    FOREIGN KEY (ID_CONSULTA) 
    REFERENCES ErmitaCitasDB.CONSULTA (ID_CONSULTA)
);
/*
DROP TABLE ErmitaCitasDB.RECETA_DETALLE
 */
CREATE TABLE ErmitaCitasDB.RECETA_DETALLE
(
  ID_RECETA       INT        NOT NULL AUTO_INCREMENT,
  ID_MEDICAMENTO  INT         NOT NULL,
  CANTIDAD        INT,
  INDICACIONES    VARCHAR(100),
  DURACION        VARCHAR(100),
  PRIMARY KEY (ID_RECETA, ID_MEDICAMENTO),
  CONSTRAINT FK_RECETA_D_MEDICA 
    FOREIGN KEY (ID_MEDICAMENTO) 
    REFERENCES ErmitaCitasDB.MEDICAMENTO (ID_MEDICAMENTO),
  CONSTRAINT FK_RECETA_D_RECETA 
    FOREIGN KEY (ID_RECETA) 
    REFERENCES ErmitaCitasDB.RECETA (ID_RECETA)
);

/*
DROP TABLE ErmitaCitasDB.CONSULTA_DIAGNOSTICO
 */

CREATE TABLE ErmitaCitasDB.CONSULTA_DIAGNOSTICO
(
  ID_DIAGNOSTICO       INT                  NOT NULL AUTO_INCREMENT,
  ID_CONSULTA          INT                  NOT NULL,
  ID_TIPO_DIAGNOSTICO  INT                  NOT NULL,
  DESCRIPCION          TEXT                 NOT NULL,
  ACTIVO               CHAR(1)              DEFAULT 'S' NOT NULL,
  PRIMARY KEY (ID_DIAGNOSTICO),
  CONSTRAINT CK_CONS_DIAG_ACTIVO
    CHECK (ACTIVO IN ('S', 'N')),
  CONSTRAINT FK_CONS_DIAG_CONSULTA 
    FOREIGN KEY (ID_CONSULTA) 
    REFERENCES ErmitaCitasDB.CONSULTA (ID_CONSULTA),
  CONSTRAINT FK_CONS_DIAG_T_DIAG 
    FOREIGN KEY (ID_TIPO_DIAGNOSTICO) 
    REFERENCES ErmitaCitasDB.TIPO_DIAGNOSTICO (ID_TIPO_DIAGNOSTICO)
);

/*
DROP TABLE ErmitaCitasDB.CONSULTA_TRATAMIENTO
 */

CREATE TABLE ErmitaCitasDB.CONSULTA_TRATAMIENTO
(
  ID_TRATAMIENTO       INT                  NOT NULL AUTO_INCREMENT,
  ID_CONSULTA          INT                  NOT NULL,
  ID_TIPO_TRATAMIENTO  INT                  NOT NULL,
  DESCRIPCION          VARCHAR(100)         NOT NULL,
  ACTIVO               CHAR(1)              DEFAULT 'S' NOT NULL,
  PRIMARY KEY (ID_TRATAMIENTO),
  CONSTRAINT CK_CONS_TRAT_ACTIVO
    CHECK (ACTIVO IN ('S', 'N')),
  CONSTRAINT FK_CONS_TRAT_CONSULTA 
    FOREIGN KEY (ID_CONSULTA) 
    REFERENCES ErmitaCitasDB.CONSULTA (ID_CONSULTA),
  CONSTRAINT FK_CONS_TRAT_T_TRAT 
    FOREIGN KEY (ID_TIPO_TRATAMIENTO) 
    REFERENCES ErmitaCitasDB.TIPO_TRATAMIENTO (ID_TIPO_TRATAMIENTO)
);

INSERT INTO TIPO_DOCUMENTO(descripcion, abreviatura, activo) VALUES('Documento Personal de Identificación','DPI','S');
INSERT INTO TIPO_DOCUMENTO(descripcion, abreviatura, activo) VALUES('Número de Identificación Tibutaria','NIT','S');
INSERT INTO TIPO_DOCUMENTO(descripcion, abreviatura, activo) VALUES('Pasaporte','Pas','S');
INSERT INTO TIPO_DOCUMENTO(descripcion, abreviatura, activo) VALUES('Otro','Otr','S');

INSERT INTO ROL(descripcion, activo) VALUES('Administrador', 'S');
INSERT INTO ROL(descripcion, activo) VALUES('Consulta', 'S');
  
INSERT INTO PERSONA(nombres, apellidos, fec_nacimiento, documento_id, id_tipo_documento, sexo, direccion, telefonos, activo) VALUES('Administrador','','1990-01-01',NULL,4,'M','Mixco, Guatemala',NULL,'S');
INSERT INTO USUARIO(id_persona, usuario, contrasena, fec_vto_contrasena, activo) VALUES(1,'ADMIN','admin123','2025-12-31','S');

INSERT INTO USUARIO_ROL (id_usuario, id_rol) VALUES(1,1);

INSERT INTO ESTADO(descripcion, activo) VALUES('Creada', 'S');
INSERT INTO ESTADO(descripcion, activo) VALUES('Atendida', 'S');
INSERT INTO ESTADO(descripcion, activo) VALUES('Finalizada', 'S');
INSERT INTO ESTADO(descripcion, activo) VALUES('Reagendada', 'S');
